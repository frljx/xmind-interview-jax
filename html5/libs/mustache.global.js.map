{
  "version": 3,
  "sources": ["../src/index.ts", "../../shared/src/index.ts", "../src/bind-data.ts", "../src/nest-tokens.ts", "../src/scanner.ts"],
  "sourcesContent": ["import bind from './bind-data'\nimport { scanner } from './scanner'\n\nexport const render = (templateStr: any, component: any) => {\n  // console.log(templateStr, data)\n\n  // \u5C06\u6A21\u7248\u5B57\u7B26\u4E32\u626B\u63CF\u6210tokens\n  let tokens = scanner(templateStr)\n  // console.log('tokens --> ', tokens)\n  // \u5C06\u6570\u636E\u7ED1\u5B9A\u5230tokens, \u8FD4\u56DE\u5904\u7406\u597D\u7684dom\u6570\u636E\n  let doms = bind(tokens, component.data, component)\n\n  return doms\n}\n", "export const isObject = (obj: any) => {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n *\n * @param arr \u8981\u5224\u65AD\u7684\u5BF9\u8C61\n * @param len \u662F\u5426\u68C0\u6D4B\u957F\u5EA6\n */\nexport const isArray = (arr: any, len?: boolean): arr is Array<any> => {\n  if (len) {\n    return Array.isArray(arr) && arr.length > 0\n  } else {\n    return Array.isArray(arr)\n  }\n}\n\nexport const isUndef = (obj: any): obj is undefined => {\n  return obj === undefined\n}\n\nexport const hasOwnProp = (obj: object, key: string) => {\n  return obj.hasOwnProperty ? obj.hasOwnProperty(key) : false\n}\n\n// \u63A5\u6536\u4E00\u4E2A\u9A7C\u5CF0\u547D\u540D\u7684\u540D\u79F0\uFF0C\u5C06\u5176\u8F6C\u6362\u6210\u6307\u5B9A\u5206\u9694\u7B26\u7684\u540D\u79F0\uFF0C\u4E3B\u8981\u4E3A\u4E86\u53D6\u6837\u5F0F\u540D\uFF0C\u522B\u7684\u5730\u65B9\u53EF\u80FD\u7528\u5F97\u5230\nexport const camel2name = (camel: string, sep?: string) => {\n  sep = sep ? sep : '-'\n  let s = camel.substring(1)\n  if (/[A-Z]+/.test(s)) {\n    s = s.replace(/([A-Z]+)/, (_, $1) => {\n      return sep + $1.toLowerCase()\n    })\n  }\n  return camel[0].toLowerCase() + s\n}\n", "import { isArray } from '@jax/shared'\n/**\n * \u5C06\u6570\u636E\u7ED1\u5B9A\u5230tokens\uFF0C\u8F93\u51FA\u8F6C\u6362\u540E\u7684dom\u5B57\u7B26\u4E32\n * @param arr\n * @returns\n */\nconst bind = (arr: any, data: any, component: any) => {\n  let index = 0\n  let res = ''\n  while (index < arr.length) {\n    let item = arr[index]\n    if (item[0] === '#' && isArray(item[2])) {\n      // \u6570\u636E\u8282\u70B9\u5B58\u5728\u6570\u636E\u5219\u7ED1\u5B9A\u6570\u636E\uFF0C\u5426\u5219\u79FB\u9664token\uFF0C\u76F8\u5F53\u4E8Eif\n      if (isArray(data[item[1]])) {\n        res += loop(item, data[item[1]], component)\n      }\n    } else if (item[0] === 'name') {\n      if (item[1] === '.') {\n        res += data\n      } else {\n        res += executeText(data, item[1], component) || ''\n      }\n    } else {\n      // item[0] = text\u7684\u60C5\u51B5\n      res += item[1]\n    }\n    index++\n  }\n  return res\n}\n\nconst executeText = (\n  data: { [key: string]: any },\n  text: string,\n  component: any\n) => {\n  let headCode = ''\n\n  if (typeof data !== 'object') {\n    text = text.replace(/\\.[^\\w]/, JSON.stringify(data))\n    data = window[component.namespace]\n  }\n  let keys = Reflect.ownKeys(data)\n  keys.forEach((k) => {\n    // \u5728\u51FD\u6570\u4F53\u4E2D\uFF0C\u62FC\u63A5\u53D8\u91CF\u58F0\u660E\u8BED\u53E5\n    headCode += `let ${String(k)} = data[${JSON.stringify(k)}];`\n  })\n\n  // \u4E8B\u4EF6\u6CE8\u518C\u6807\u8BC6\u7B26\n  if (/\\$[\\s\\S]/.test(text)) {\n    text = text.replace(\n      /\\$([\\s\\S]+)/,\n      (_, $1) => `${component.namespace}.${$1}(event)`\n    )\n    return text\n  }\n  // \u8BBF\u95EE\u7236\u7EA7\u6807\u8BC6\u7B26\n  if (/\\^(\\w+)/.test(text)) {\n    let upper = text.match(/\\^(\\w+)/)\n    text = text.replace(/\\^(\\w+)/, '$1')\n    if (upper && upper[1]) {\n      headCode += `let ${String(upper[1])} = component.data[${JSON.stringify(\n        upper[1]\n      )}];`\n    }\n  }\n\n  let code = headCode + text\n  return eval(code)\n}\n\n// \u5904\u7406\u5FAA\u73AF\nconst loop = (token: any, data: any, component: any) => {\n  let res = ''\n  for (let i = 0; i < data.length; i++) {\n    res += bind(token[2], data[i], component)\n  }\n  return res\n}\n\nexport default bind\n", "/**\n * \u9047\u5230#\u5C06#\u5BF9\u5E94\u7684token\u8FDB\u6808\uFF0C\u5982\u679C\u6808\u5185\u6709\u5185\u5BB9\uFF0C\u5219\u5C06\u540E\u7EED\u7684token\u90FD\u63A8\u5165\u6808\u9876\u7684\u4E0B\u6807\u4E3A2\u7684\u6570\u7EC4\u4E2D\n * \u9047\u5230/\u51FA\u6808\n * @param arr\n * @returns\n */\nconst nestTokens = (arr: Array<any>) => {\n  let stack: any = []\n\n  let index = 0\n\n  while (index < arr.length) {\n    let token = arr[index]\n    if (token[0] === '#') {\n      stack.push(token)\n      token[2] = []\n    } else if (token[0] === '/') {\n      stack.pop()\n      arr.splice(index--, 1)\n    } else {\n      if (stack.length) {\n        stack[stack.length - 1][2].push(token)\n        arr.splice(index--, 1)\n      }\n    }\n    index++\n  }\n\n  return arr\n}\n\nexport default nestTokens\n", "import nestTokens from './nest-tokens'\n\n// \u7B2C\u4E00\u8F6E\u5904\u7406\uFF0C\u5148\u57FA\u4E8E\u6B64\u6B63\u5219\u5206\u5272\u5B57\u7B26\u4E32\nconst splitReg = /(\\{{1,2}\\s?.*?\\s?\\}{1,2})/\n\n// \u7B2C\u4E8C\u8F6E\u904D\u5386\u65F6\uFF0C\u57FA\u4E8E\u6B64\u83B7\u53D6\u5173\u952E\u5B57\u5185\u5BB9\nconst tagReg = /\\{{1,2}\\s?(.*?)\\s?\\}{1,2}/\n\nexport const scanner = (templateStr: string) => {\n  // \u53BB\u6389\u6362\u884C \u548C \u8FDE\u7EED\u591A\u4E2A\u7A7A\u683C\uFF0C\u5C06\u5176\u66FF\u6362\u4E3A1\u4E2A\u7A7A\u683C\n  templateStr = templateStr.replace(/\\s{1,}/g, ' ')\n  let split = templateStr.split(splitReg)\n  let res = []\n  for (let i = 0; i < split.length; i++) {\n    let item = split[i]\n    if (item[0] === '{') {\n      let matched = item.match(tagReg)\n      if (matched) {\n        // \u5904\u7406 # \u903B\u8F91\n        if (matched[1][0] === '#' || matched[1][0] === '/') {\n          res.push([`${matched[1][0]}`, matched[1].substring(1)])\n        } else {\n          res.push(['name', matched[1]])\n        }\n      }\n    } else {\n      res.push(['text', item])\n    }\n  }\n  return nestTokens(res)\n}\n"],
  "mappings": "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",
  "names": []
}
